
import {initI18nUI,t,getLang} from './i18n.js';
import {CITIES} from './cities.js';
const state={currency:localStorage.getItem('mw_currency')||'USD',selected:null,countryIndex:null,layers:{countries:null,cities:null},map:null};
const $=s=>document.querySelector(s);

async function loadCountryIndex(){ const list=await (await fetch('https://cdn.jsdelivr.net/npm/world-countries@4/countries.json')).json(); const idx={}; for(const c of list){ if(c.ccn3) idx[String(c.ccn3).padStart(3,'0')] = c; } state.countryIndex=idx; return list; }
function trName(c){ const lang=getLang(); return c.translations?.[lang]?.common || c.name?.common || c.cca3; }
function fmtCountry(c){ return {name:trName(c),capital:(c.capital&&c.capital[0])||'',region:c.region||'',flag:c.flags?.png||'',cca2:c.cca2||'',wikiTitle: (getLang()==='es'?(c.translations?.spa?.common||c.name?.common):(c.name?.common||'')),latlng:c.latlng, area:c.area, subregion:c.subregion, timezones:c.timezones}; }
async function fetchSummary(title){ const lang=getLang()==='es'?'es':'en'; const enc=encodeURIComponent(title); try{const r=await fetch(`https://${lang}.wikipedia.org/api/rest_v1/page/summary/${enc}`); if(!r.ok) throw 0; const d=await r.json(); return {summary:d.extract,image:d.thumbnail?.source,url:d.content_urls?.desktop?.page}; }catch(e){ return {summary:'',image:'',url:`https://${lang}.wikipedia.org/wiki/${enc}`}; } }
function buildHotels(country,city,ci,n,cur){ const co=new Date(new Date(ci).getTime()+n*86400000).toISOString().slice(0,10); const q=encodeURIComponent(city||country); return [{name:'Booking',url:`https://www.booking.com/searchresults.html?ss=${q}&checkin=${ci}&checkout=${co}&selected_currency=${cur}`},{name:'Expedia',url:`https://www.expedia.com/Hotel-Search?destination=${q}&startDate=${ci}&endDate=${co}&currency=${cur}`},{name:'Agoda',url:`https://www.agoda.com/search?city=${q}&checkIn=${ci}&los=${n}&currency=${cur}`},{name:'Hotels.com',url:`https://www.hotels.com/search.do?q-destination=${q}&q-check-in=${ci}&q-check-out=${co}&currency=${cur}`},{name:'Trip.com',url:`https://www.trip.com/hotels/list?city=${q}&checkin=${ci}&checkout=${co}&currency=${cur}`}] }
function renderHotels(){ const info=state.selected; const ci=$('#checkIn').value; const n=parseInt($('#nights').value||'5',10); const city=($('#city')?.value||'').trim()||null; const box=$('#hotels'); const more=$('#moreHotels'); box.innerHTML=''; more.innerHTML=''; if(!info){ box.innerHTML=`<p class="hint">${t('tap.hint')}</p>`; return; } const list=buildHotels(info.name,city||info.capital||'',ci,n,state.currency); list.slice(0,3).forEach(it=>{const a=document.createElement('a'); a.href=it.url;a.target='_blank';a.rel='noopener noreferrer nofollow';a.textContent=`${it.name} ¬∑ ${state.currency}`; box.append(a)}); list.slice(3).forEach(it=>{const a=document.createElement('a'); a.href=it.url;a.target='_blank';a.rel='noopener noreferrer nofollow';a.textContent=`${it.name} ¬∑ ${state.currency}`; more.append(a)}); }
function centroid(coords){ function polyCent(p){ let area=0,x=0,y=0; for(let i=0;i<p.length-1;i++){ const [x1,y1]=p[i], [x2,y2]=p[i+1]; const a=x1*y2-x2*y1; area+=a; x+=(x1+x2)*a; y+=(y1+y2)*a; } area*=0.5; if(area===0) return p[0]; return [x/(6*area), y/(6*area)]; } if(typeof coords[0][0][0]==='number') return polyCent(coords[0]); let best=null; for(const poly of coords){ const c=polyCent(poly[0]); if(!best||c[1]>best[1]) best=c; } return best||coords[0][0]; }
function addCountryLabels(geo){ if(state.layers.countries) state.layers.countries.clearLayers(); state.layers.countries=L.layerGroup(); geo.features.forEach(f=>{ const id=String(f.id).padStart(3,'0'); const c=state.countryIndex?.[id]; if(!c) return; const name=trName(c); const ctr=centroid(f.geometry.coordinates); const icon=L.divIcon({className:'label-country', html:name}); L.marker([ctr[1],ctr[0]],{icon,interactive:false}).addTo(state.layers.countries); }); return state.layers.countries; }
function addCityLabels(){ if(state.layers.cities) state.layers.cities.clearLayers(); state.layers.cities=L.layerGroup(); CITIES.forEach(ct=>{ const icon=L.divIcon({className:'label-city', html:ct.name}); L.marker([ct.lat,ct.lon],{icon,interactive:false}).addTo(state.layers.cities); }); return state.layers.cities; }
async function fetchClimate(lat,lon){ const url=`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&current=temperature_2m,weather_code,wind_speed_10m&daily=temperature_2m_max,temperature_2m_min&timezone=auto`; const r=await fetch(url); if(!r.ok) throw 0; return await r.json(); }
function renderFacts(info){ const items=[]; if(info.subregion) items.push('Subregi√≥n: '+info.subregion); if(info.area) items.push('√Årea: '+Math.round(info.area).toLocaleString()+' km¬≤'); if(info.timezones?.length) items.push('Zonas horarias: '+info.timezones.slice(0,3).join(', ')); if(items.length===0) items.push('‚Äî'); $('#facts').innerHTML='<ul>'+items.map(x=>`<li>${x}</li>`).join('')+'</ul>'; }
async function onCountryFeature(f){ const c=state.countryIndex?.[String(f.id).padStart(3,'0')]; if(!c) return; const info=fmtCountry(c); state.selected=info; $('#countryName').textContent=info.name; if(info.flag) $('#flag').src=info.flag; $('#capital').textContent=info.capital||'‚Äî'; $('#region').textContent=info.region||'‚Äî'; const td=await fetchSummary(info.wikiTitle||info.name); const img=td.image?`<img src="${td.image}" alt="${info.name}" style="width:100%;border-radius:12px;margin:6px 0">`:''; $('#tourism').innerHTML= img + `<p>${td.summary||''}</p><div class="row"><a class="button" href="${td.url}" target="_blank" rel="noopener">`+t('tourism.readmore')+`</a></div>`; renderFacts(info); renderHotels(); $('#mapLabel').textContent=info.name; $('#mapLabel').style.display='block'; try{ const lat=info.latlng?.[0]||0, lon=info.latlng?.[1]||0; const wx=await fetchClimate(lat,lon); const cur = wx.current; const d = wx.daily; const fmt = (i)=>`${new Date(d.time[i]).toLocaleDateString()} ¬∑ `+t('climate.hi')+`: ${Math.round(d.temperature_2m_max[i])}¬∞ ¬∑ `+t('climate.lo')+`: ${Math.round(d.temperature_2m_min[i])}¬∞`; const days = d?.time?.length? d.time.map((_,i)=>`<li>${fmt(i)}</li>`).join('') : ''; $('#climateBox').innerHTML = `<p><strong>`+t('climate.current')+`:</strong> ${Math.round(cur.temperature_2m)}¬∞C ¬∑ viento ${Math.round(cur.wind_speed_10m)} km/h</p><h4>`+t('climate.forecast')+`</h4><ul>${days}</ul>`; } catch(e){ $('#climateBox').innerHTML='<p>No disponible.</p>'; } }
function activateTab(id){ document.querySelectorAll('.tab').forEach(t=>t.classList.remove('active')); document.querySelectorAll('.pane').forEach(p=>p.classList.remove('active')); document.getElementById('tab-'+id).classList.add('active'); document.getElementById('pane-'+id).classList.add('active'); if(id==='hotels') renderHotels(); }
function initAI(){ const fab=$('#ai-fab'), panel=$('#ai-panel'), stream=$('#ai-stream'), input=$('#ai-text'); const send=async()=>{ const msg=input.value.trim(); if(!msg) return; stream.insertAdjacentHTML('beforeend', `<div class="msg user">${msg}</div>`); input.value=''; const payload={ message:msg, lang:getLang(), currency:state.currency, date:$('#checkIn').value, nights:$('#nights').value, country: state.selected?.name||null, capital: state.selected?.capital||null }; try{ const r=await fetch('/api/ai-chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)}); const d=await r.json(); stream.insertAdjacentHTML('beforeend', `<div class="msg ai">${d.reply||'(sin respuesta)'}</div>`); stream.scrollTop=stream.scrollHeight; }catch(e){ stream.insertAdjacentHTML('beforeend', `<div class="msg ai">No pude conectar con el asistente. Revisa tu hosting.</div>`); } }; fab.onclick=()=>{ panel.style.display = (panel.style.display==='flex'?'none':'flex'); stream.scrollTop=stream.scrollHeight; }; $('#ai-send').onclick=send; input.addEventListener('keydown',e=>{ if(e.key==='Enter') send(); }); }
function nearestCity(lat,lon){ let best=null,bd=1e9; for(const c of CITIES){ const d = Math.hypot(c.lat-lat, c.lon-lon); if(d<bd){ bd=d; best=c; } } return best; }
function initGPS(){ if(!navigator.geolocation) return; if(!confirm(t('gps.ask'))) return; navigator.geolocation.getCurrentPosition( pos=>{ const {latitude:lat, longitude:lon} = pos.coords; state.map.setView([lat,lon], 5); const near = nearestCity(lat,lon); if(near){ const box = document.getElementById('nearby'); box.innerHTML = `<strong>`+t('nearby.title')+`:</strong> ${near.name}`; } }, err=>{ console.warn('GPS rechazado', err); }, {enableHighAccuracy:true, timeout:10000}); }
function setupSearch(countryList){ const input=$('#searchBox'); const cont=$('#suggestions'); const norm=s=>s.toLowerCase().normalize('NFD').replace(/\p{Diacritic}/gu,''); const pool=[...countryList.map(c=>({type:'country', label:trName(c), lat:c.latlng?.[0], lon:c.latlng?.[1]})), ...CITIES.map(x=>({type:'city', label:x.name, lat:x.lat, lon:x.lon}))]; function show(items){ cont.innerHTML=''; items.slice(0,50).forEach(it=>{ const div=document.createElement('div'); div.textContent = (it.type==='city'?'üèôÔ∏è ':'üåç ')+it.label; div.onclick=()=>{ cont.innerHTML=''; input.value=it.label; state.map.setView([it.lat,it.lon], it.type==='city'?8:4); }; cont.appendChild(div); }); cont.style.display = items.length?'block':'none'; } input.addEventListener('input', ()=>{ const q=norm(input.value||''); if(q.length<2){ cont.style.display='none'; return; } const res = pool.filter(p=>norm(p.label).includes(q)); show(res); }); document.addEventListener('click', (e)=>{ if(!cont.contains(e.target) && e.target!==input) cont.style.display='none'; }); }
window.addEventListener('DOMContentLoaded', async ()=>{
  await initI18nUI();
  $('#inCurrency').value=state.currency; $('#inCurrency').addEventListener('change',e=>{state.currency=e.target.value;localStorage.setItem('mw_currency',state.currency); renderHotels();});
  ['tourism','hotels','facts','climate'].forEach(id=>$('#tab-'+id).addEventListener('click',()=>activateTab(id)));
  state.map=L.map('map',{ zoomControl:true }).setView([20,0],2);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{maxZoom:8,attribution:'&copy; OpenStreetMap'}).addTo(state.map);
  const topojson=await import('https://cdn.jsdelivr.net/npm/topojson-client@3/+esm');
  const topo=await (await fetch('https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json')).json();
  const countryList = await loadCountryIndex();
  const countries=topojson.feature(topo, topo.objects.countries);
  function onEach(f,l){ const c=state.countryIndex?.[String(f.id).padStart(3,'0')]; const nm = c? trName(c):''; if(nm){ l.bindTooltip(nm,{sticky:true, direction:'center', className:'country-tooltip'}); } l.on('click',()=>onCountryFeature(f)); }
  L.geoJSON(countries,{style:{color:'#93c5fd',weight:.7,fillColor:'#60a5fa',fillOpacity:.14},onEachFeature:onEach}).addTo(state.map);
  const countryLabels=(function(){ const g=L.layerGroup(); countries.features.forEach(f=>{ const id=String(f.id).padStart(3,'0'); const c=state.countryIndex?.[id]; if(!c) return; const name=trName(c); const ctr=(function coordsCentroid(coords){ function polyCent(p){ let area=0,x=0,y=0; for(let i=0;i<p.length-1;i++){ const [x1,y1]=p[i], [x2,y2]=p[i+1]; const a=x1*y2-x2*y1; area+=a; x+=(x1+x2)*a; y+=(y1+y2)*a; } area*=0.5; if(area===0) return p[0]; return [x/(6*area), y/(6*area)]; } if(typeof coords[0][0][0]==='number') return polyCent(coords[0]); let best=null; for(const poly of coords){ const c=polyCent(poly[0]); if(!best||c[1]>best[1]) best=c; } return best||coords[0][0]; })(f.geometry.coordinates); const icon=L.divIcon({className:'label-country', html:name}); L.marker([ctr[1],ctr[0]],{icon,interactive:false}).addTo(g); }); return g; })();
  const cityLabels=(function(){ const g=L.layerGroup(); CITIES.forEach(ct=>{ const icon=L.divIcon({className:'label-city', html:ct.name}); L.marker([ct.lat,ct.lon],{icon,interactive:false}).addTo(g); }); return g; })();
  const ctrl=L.control({position:'topright'}); ctrl.onAdd=()=>{ const div=L.DomUtil.create('div','leaflet-bar layer-toggle'); div.style.background='#ffffffcc'; div.style.padding='8px 10px'; div.style.border='1px solid var(--border)'; div.style.borderRadius='10px'; div.innerHTML = `
    <label style="display:flex;gap:6px;align-items:center;"><input id="tgCountries" type="checkbox" checked><span>${t('layer.countries')}</span></label>
    <label style="display:flex;gap:6px;align-items:center;margin-top:6px;"><input id="tgCities" type="checkbox" checked><span>${t('layer.cities')}</span></label>`; return div; }; ctrl.addTo(state.map);
  document.getElementById('tgCountries').addEventListener('change',(e)=>{ if(e.target.checked){ countryLabels.addTo(state.map);} else { state.map.removeLayer(countryLabels);} });
  document.getElementById('tgCities').addEventListener('change',(e)=>{ if(e.target.checked){ cityLabels.addTo(state.map);} else { state.map.removeLayer(cityLabels);} });
  countryLabels.addTo(state.map); cityLabels.addTo(state.map);
  $('#checkIn').value=new Date().toISOString().slice(0,10); $('#nights').value=5;
  $('#city').addEventListener('input',renderHotels);
  $('#tourism').innerHTML=`<p class="hint">`+t('tap.hint')+`</p>`; $('#facts').innerHTML=`<p class="hint">`+t('tap.hint')+`</p>`; $('#climateBox').innerHTML=`<p class="hint">`+t('tap.hint')+`</p>`;
  setupSearch(countryList);
  initGPS();
  initAI();
  document.getElementById('tab-tourism').classList.add('active'); document.getElementById('pane-tourism').classList.add('active');
});
